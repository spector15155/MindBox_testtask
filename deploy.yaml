apiVersion: apps/v1
kind: Deployment
metadata:
  name:  MindBox_webapp
  namespace: test
  labels:
    app:  MindBox_webapp
spec:
  selector:
    matchLabels:
      app: MindBox_webapp
  replicas: 4                           # 4 пода справятся
  strategy:
    rollingUpdate:                      # Find more info
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  MindBox_webapp
    spec:
      # initContainers:                 # Не нужны
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  MindBox_webapp
        image:  MindBox_webapp:latest
        resources:
          requests:
            cpu: 100m                   # Из условия
            memory: 128Mi               # Из условия (M - Megabytes 1000, Mi - Mebibytes 1024)
          limits:
            cpu: 250m                   # т.к приложение потребляет больше процессорного времени на старте, максимум одноврененно при отказе всех остальных нод может быть запущено 4 пода, при условии что на машине всего 1 ядро -> 1/4=0.25
            memory: 144Mi               # Лимит памяти больше для надежности
        livenessProbe:                  # Для надежности используем liveness и readiness пробы
          tcpSocket:
            port: 80
          initialDelaySeconds: 5        # Минимум 5 секунд для инициализации пода 
          timeoutSeconds: 1             # Проверяем раз в секунду
          successThreshold: 1           # Проверяем до первой успешной попытки
          failureThreshold: 5           # Если через 10 секунд со старта под на завелся, перезапускаем
          periodSeconds: 10             # Каждые 10 секунд проверяем на жизнеспособность
        readinessProbe:
          httpGet:
            path: "input_path"
            port: 80
          initialDelaySeconds: 5        # Минимум 5 секунд для инициализации пода 
          timeoutSeconds: 1             # Проверяем раз в секунду
          successThreshold: 1           # Проверяем до первой успешной попытки
          failureThreshold: 5           # Если через 10 секунд со старта под на завелся, перезапускаем
          periodSeconds: 10             # Каждые 10 секунд проверяем на работоспособность
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: MindBox_webapp
              key: DB_HOST
        ports:
        - containerPort:  80
          name:  MindBox_webapp
        volumeMounts:
        - name: "input_name"
          mountPath: "input_path"
      volumes:
        - name: "input_name"
          hostPath:
            path: "input_path"
      restartPolicy: Always